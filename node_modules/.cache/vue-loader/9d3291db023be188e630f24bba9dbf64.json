{"remainingRequest":"G:\\webstore\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\webstore\\vue-admin\\src\\views\\Users\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\webstore\\vue-admin\\src\\views\\Users\\Users.vue","mtime":1652083698456},{"path":"G:\\webstore\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\webstore\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\webstore\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\webstore\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Users.vue","sourceRoot":"src/views/Users","sourcesContent":["<template>\r\n<div>\r\n<!--  面包屑导航区域-->\r\n  <el-breadcrumb separator=\"/\">\r\n    <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n    <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n    <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n  </el-breadcrumb>\r\n<!--  卡片视图区-->\r\n  <el-card >\r\n<!--    添加与搜索区域-->\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"10\">\r\n        <!--   搜索与添加区域-->\r\n<!-- \t\tclearable 搜索框会出现一个清除按钮默认为true  @clear是elementui input事件 点击clearable清空按钮时触发 -->\r\n<!-- 点击@clear取消按钮重新请求数据显示默认页面 -->\r\n        <el-input placeholder=\"请输入内容\"  v-model=\"quertInfo.query\" clearable @clear=\"getUserList\">\r\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n        </el-input>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n\t<!-- \t  点击调出弹窗 -->\r\n        <el-button type=\"primary\" @click=\"addDialogVisible=true\">添加用户</el-button>\r\n      </el-col>\r\n    </el-row>\r\n\r\n<!--    用户列表区域-->\r\n<!-- stripe是否为斑马纹 table label显示的标题 prop\t对应列内容的字段名，也可以使用 property 属性 -->\r\n      <el-table :data=\"userlist\" stripe style=\"width: 100%\" border>\r\n        <el-table-column label=\"序号\" type=\"index\" width=\"60px\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"姓名\" ></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\" ></el-table-column>\r\n        <el-table-column prop=\"mobile\" label=\"电话\" ></el-table-column>\r\n        <el-table-column prop=\"role_name\" label=\"角色\" ></el-table-column>\r\n        <el-table-column prop=\"mg_state\" label=\"状态\" >\r\n          <template v-slot=\"{row}\">\r\n<!--  v-slot具名插槽默认参数为default       滑块模块-->\r\n<!-- v-slot=\"{row}\"相当于使用了prop 这个 prop=\"mg_state\"就是当前的prop  这些prop名都是根据userlist属性决定的，一一对应-->\r\n<!-- 绑定v-model到一个Boolean类型的变量来决定开和关的状态 -->\r\n            <el-switch v-model=\"row.mg_state\" active-color=\"#13ce66\"\r\n                    inactive-color=\"#ff4949\" @change=\"userStateChanged(row)\">\r\n            </el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column  label=\"操作\" width=\"180px\">\r\n<!-- \t\t\tv-slot:default=\"{row}\"完整写法这里改为简写 -->\r\n          <template v-slot=\"{row}\">\r\n<!-- \t{{row}}就是解构后当前行的数据 -->\r\n<!--          修改-->\r\n          <el-button @click=\"showEditDialog(row.id)\" type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"></el-button>\r\n<!--          删除-->\r\n          <el-button @click=\"removeById(row.id)\" type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"></el-button>\r\n<!--          分配角色 加入了文字提示-->\r\n          <el-tooltip   effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n            <el-button @click=\"setRole(row)\" type=\"warning\" icon=\"el-icon-setting\" size=\"mini\" ></el-button>\r\n          </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n<!--    分页区域-->\r\n<!-- page-size\t每页显示条目个数  total\t总条目数  layout\t组件布局，子组件名用逗号分隔 \r\n current-page\t当前页数 current-change\tcurrentPage 改变时会触发 size-change\tpageSize 改变时会触发-->\r\n    <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"quertInfo.pagenum\"\r\n            :page-sizes=\"[1, 2, 5, 10]\"\r\n            :page-size=\"quertInfo.pagesize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\">\r\n    </el-pagination>\r\n  </el-card>\r\n\r\n<!--  添加用户的对话框-->\r\n  <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\">\r\n<!--    内容主题区域-->\r\n<!-- prop表单域 model 字段，在使用 validate、resetFields 方法的情况下，该属性是必填的 -->\r\n    <el-form :model=\"addForm\" :rules=\"addFormRules\"\r\n       ref=\"addFormRef\" label-width=\"70px\">\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"addForm.username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\">\r\n        <el-input v-model=\"addForm.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input v-model=\"addForm.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"手机\" prop=\"mobile\">\r\n        <el-input v-model=\"addForm.mobile\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n<!--    底部区域-->\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n<!--   按钮关闭属性   @click=\"addDialogVisible = false\"-->\r\n    <el-button @click=\"resetform\">重置</el-button>\r\n    <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n  </span>\r\n  </el-dialog>\r\n\r\n<!--  修改用户的对话框-->\r\n<el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisiblle\" width=\"50%\">\r\n    <!--    内容主题区域-->\r\n    <el-form :model=\"editForm\" :rules=\"addFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n<!-- \t\t\t 加上prop=\"username\" 就会变为必填项 校验才会校验username-->\r\n<!-- 由于接口没有设置接收用户名的参数，用户名不可修改，所以前端设置disabled禁止修改  disabled要写在input中。。-->\r\n      <el-form-item label=\"用户名\" prop=\"username\" >\r\n        <el-input v-model=\"editForm.username\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input v-model=\"editForm.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"手机\" prop=\"mobile\">\r\n        <el-input v-model=\"editForm.mobile\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--    底部区域-->\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n<!--   按钮关闭属性   @click=\"addDialogVisible = false\"-->\r\n    <el-button @click=\"editDialogVisiblle = false\">取消</el-button>\r\n    <el-button type=\"primary\" @click=\"editUserinfo\">确 定</el-button>\r\n  </span>\r\n</el-dialog>\r\n<!--  分配角色的对话框-->\r\n<el-dialog title=\"分配角色\" :visible.sync=\"setRoleDialogVisiblle\" @close=\"setRoleDialogClosed\" width=\"50%\">\r\n    <div>\r\n      <p>{{userInfo.username}}</p>\r\n      <p>{{userInfo.role_name}}</p>\r\n      <p>分配新角色:\r\n        <el-select v-model=\"selectRoleId\" placeholder=\"请选择\">\r\n\t<!-- \t\tvalue\t选项的值 -->\r\n          <el-option\r\n                  v-for=\"item in rolesList\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.roleName\"\r\n                  :value=\"item.id\">\r\n          </el-option>\r\n        </el-select>\r\n      </p>\r\n    </div>\r\n    <!--    底部区域-->\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n<!--   按钮关闭属性   @click=\"addDialogVisible = false\"-->\r\n    <el-button @click=\"setRoleDialogVisiblle = false\">取消</el-button>\r\n    <el-button @click=\"saveRoleInfo\" type=\"primary\" >确 定</el-button>\r\n  </span>\r\n</el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Users\",\r\n    data(){\r\n      //验证邮箱校验规则\r\n      let checkEmail=(rule,value,callback)=>{\r\n        const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n        if(regEmail.test(value)){\r\n          //合法的邮箱\r\n          return callback()\r\n        }\r\n        callback(new Error('请输入合法的邮箱'))\r\n      }\r\n      //验证手机号校验规则\r\n      let checkMobile=(rule,value,callback)=>{\r\n        // 验证手机号的正则表达式\r\n        const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\r\n        //如果regMobile的test方法中value经过校验合法的手机号\r\n        if (regMobile.test(value)) {\r\n          //执行callback方法\r\n          return callback()\r\n        }\r\n\r\n        callback(new Error('请输入合法的手机号'))\r\n\r\n      }\r\n\r\n      return{\r\n      //获取用户列表的参数对象\r\n        quertInfo:{\r\n\t\t  //查询参数\r\n          query:'',\r\n          //当前的页数\r\n          pagenum:1,\r\n          //当前每页显示多少条数据\r\n          pagesize:5\r\n        },\r\n\t\t//搜索时记录的用户信息\r\n        userlist:[],\r\n\t\t//当前页面总页码数\r\n        total:0,\r\n        //控制添加用户对话框的显示和隐藏\r\n        addDialogVisible:false,\r\n        //控制修改用户对话框的显示和隐藏\r\n        editDialogVisiblle:false,\r\n        //控制分配角色对话框的显示和隐藏\r\n        setRoleDialogVisiblle:false,\r\n        //查询到的用户信息对象\r\n        editForm:{},\r\n        //添加用户的表单数据\r\n        addForm:{\r\n          username:'',\r\n          password:'',\r\n          email:'',\r\n          mobile:''\r\n        },\r\n        //添加用户表单的规则对象\r\n        addFormRules:{\r\n          username:[\r\n            {required: true, message: '请输入用户名', trigger: 'blur'},\r\n            {min: 3, max: 10, message: '用户名长度在 3 到 10 个字符之间', trigger: 'blur'}\r\n          ],\r\n          password:[\r\n            {required: true, message: '请输入密码', trigger: 'blur'},\r\n            {min: 6, max: 15, message: '密码长度在 6到 15个字符之间', trigger: 'blur'}\r\n          ],\r\n          email:[\r\n            {required: true, message: '请输入邮箱', trigger: 'blur'},\r\n            { validator: checkEmail, trigger: 'blur' }\r\n          ],\r\n          mobile:[\r\n            {required: true, message: '请输入手机号', trigger: 'blur'},\r\n            { validator: checkMobile, trigger: 'blur' }\r\n          ]\r\n        },\r\n        //需要分配角色的用户信息\r\n        userInfo:{},\r\n        //所有角色的数据列表\r\n        rolesList:[],\r\n        //已选中的角色id值\r\n        selectRoleId:''\r\n      }\r\n    },\r\n    created() {\r\n      this.getUserList()\r\n    },\r\n    methods:{\r\n      getUserList(){\r\n        this.$http.get('users',{params:this.quertInfo})\r\n          .then(({data:res})=> {\r\n            if (res.meta.status!==200){\r\n             return this.$message.error(res.data.meta.msg);\r\n            }\r\n            this.userlist=res.data.users\r\n            // console.log(this.userlist);\r\n            this.total=res.data.total\r\n\r\n          })\r\n      },\r\n      //监听pagesize改变的事件\r\n      handleSizeChange(newSize){\r\n        // console.log(newSize)\r\n        this.quertInfo.pagesize=newSize\r\n        //重新获取数据\r\n        this.getUserList()\r\n      },\r\n      //监听页码值改变的事件\r\n      handleCurrentChange(newpage){\r\n        console.log(newpage)\r\n        this.quertInfo.pagenum=newpage\r\n        //重新获取数据\r\n        this.getUserList()\r\n      },\r\n      //监听switch开关状态的事件\r\n      userStateChanged(userinfo){\r\n        this.$http.put(`users/${userinfo.id}/state/${userinfo.mg_state}`)\r\n          .then(({data:res})=> {\r\n\t\t\t  console.log(res)\r\n            if (res.meta.status !== 200) {\r\n\t\t\t\t//请求失败时改变时再改变滑块状态 \r\n              userinfo.mg_state=!userinfo.mg_state\r\n              return this.$message.error('更新用户状态失败');\r\n            }\r\n            this.$message.success('更新用户状态成功')\r\n          })\r\n          },\r\n      //点击对话框里的重置按钮重置表单\r\n      resetform(){\r\n        this.$refs.addFormRef.resetFields()\r\n      },\r\n      //点击按钮，添加用户\r\n      addUser(){\r\n        this.$refs.addFormRef.validate((valid)=>{\r\n          if (!valid) return\r\n          //可以发起添加用户的请求\r\n          this.$http.post('users',this.addForm)\r\n            .then(res=> {\r\n              // console.log(res)\r\n              if (res.data.meta.status !== 201) {\r\n                return this.$message.error('添加用户失败');\r\n              }\r\n                this.$message.success('添加用户成功')\r\n                //隐藏添加用户的对话框\r\n                this.addDialogVisible=false\r\n                //重新获取用户列表\r\n                this.getUserList()\r\n            })\r\n        })\r\n      },\r\n      //展示编辑用户的对话框\r\n      showEditDialog(id){\r\n        this.$http.get('users/'+id)\r\n          .then(({data:res})=> {\r\n            // console.log(res)\r\n            if (res.meta.status !== 200) {\r\n              return this.$message.error('查询用户信息失败');\r\n            }\r\n\t\t\t//保存查询到的用户信息对象 直接打开的话是一个空表 editForm最开始是空的\r\n            this.editForm=res.data\r\n\t\t\t// console.log(this.editForm);\r\n\t\t\t//渲染内容后打开修改用户信息弹窗\r\n            this.editDialogVisiblle=true\r\n          })\r\n      },\r\n      //修改用户信息并提交\r\n      editUserinfo(){\r\n        //获取表单预校验结果为true  类似id用法通过ref属性拿值\r\n        this.$refs.editFormRef.validate(vaild=>{\r\n         if (!vaild) return\r\n          //发起修改用户信息的数据请求\r\n          this.$http.put(`users/`+this.editForm.id,{\r\n            email:this.editForm.email,\r\n            mobile:this.editForm.mobile\r\n          }).then(({data:res})=> {\r\n\t\t\t  console.log(res);\r\n              if (res.meta.status !== 200) {\r\n                return this.$message.error('更新用户信息失败');\r\n              }\r\n\t\t\t  //重新获取用户列表\r\n\t\t\t  this.getUserList()\r\n              //隐藏添加用户的对话框\r\n              this.editDialogVisiblle=false\r\n\t\t\t  this.$message.success('更新用户信息成功')\r\n            })\r\n        })\r\n      },\r\n      //根据id删除对应的用户信息\r\n      removeById(id){\r\n//弹框询问是否删除 \r\n// element 调用$confirm方法即可打开消息提示，它模拟了系统的 confirm。Message Box 组件也拥有极高的定制性，\r\n// 我们可以传入options作为第三个参数，它是一个字面量对象。type字段表明消息类型，可以为success，error，info\r\n// 和warning，无效的设置将会被忽略。注意，第二个参数title必须定义为String类型，如果是Object，会被理解为options。\r\n// 在这里我们用了 Promise 来处理后续响应。\r\n          this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.$http.delete(`users/`+id).then(({data:res})=> {\r\n                if (res.meta.status !== 200) {\r\n                  return this.$message.error('删除用户失败');\r\n                }\r\n                this.$message.success('删除用户成功')\r\n                //删除成功后刷新数据列表\r\n                this.getUserList();\r\n              })\r\n          }).catch(() => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '已取消删除'\r\n            });\r\n          });\r\n      },\r\n      //展示分配角色的对话框\r\n      setRole(row){\r\n        this.userInfo=row\r\n        //在展示对话框前获取所有的角色列表\r\n        this.$http.get('roles')\r\n          .then(({data:res})=> {\r\n\t\t\t  // console.log(res);\r\n            if (res.meta.status !== 200) {\r\n              return this.$message.error('获取角色列表失败');\r\n            }\r\n            this.rolesList=res.data\r\n          })\r\n        this.setRoleDialogVisiblle=true\r\n      },\r\n      //点击按钮分配角色\r\n      saveRoleInfo(){\r\n\t\t//如果没选择请选择要分配的角色 未选择任何值\r\n        if(!this.selectRoleId){\r\n         return this.$message.error('请选择要分配的角色')\r\n        }\r\n        this.$http.put(`users/${this.userInfo.id}/role`,{\r\n          rid:this.selectRoleId\r\n        })\r\n          .then(({data:res})=> {\r\n\t\t\t  console.log(res);\r\n            if (res.meta.status !== 200) {\r\n              return this.$message.error('更新角色失败')\r\n            }\r\n            this.$message.success('更新角色成功')\r\n            this.getUserList()\r\n            this.setRoleDialogVisiblle=false\r\n          })\r\n      },\r\n      //监听分配角色对话框的关闭事件\r\n      setRoleDialogClosed(){\r\n        this.selectRoleId=''\r\n        this.userInfo={}\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}